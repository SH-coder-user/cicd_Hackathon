name: Deploy on self-hosted
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # wsie-back이 서브모듈이고 필요하면 주석 해제
          # submodules: true

      - name: Prepare runtime secret file (Firebase SA JSON)
        env:
          FIREBASE_SA_JSON: ${{ secrets.FIREBASE_SA_JSON }}
        run: |
          set -eu
          mkdir -p .runtime_secrets
          # 권한 최소화
          install -m 600 /dev/null .runtime_secrets/firebase_sa.json
          # JSON 원문 기록 (개행/유니코드 보존)
          printf '%s' "$FIREBASE_SA_JSON" > .runtime_secrets/firebase_sa.json
          # Compose가 참조할 호스트 경로를 다음 스텝으로 전달
          echo "FIREBASE_SA_FILE=$PWD/.runtime_secrets/firebase_sa.json" >> $GITHUB_ENV
      - name: Diagnose workspace
        working-directory: ${{ github.workspace }}
        run: |
          echo "PWD=$(pwd)"
          echo "== list root =="
          ls -la
          echo "== .dockerignore =="
          if [ -f .dockerignore ]; then
            wc -c .dockerignore
            sed -n '1,200p' .dockerignore
          else
            echo "(no .dockerignore)"
          fi
          echo "== tree web =="
          ls -la web || true
          echo "== tree nginx =="
          ls -la nginx || true
      - name: Docker Compose up (build & run)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          FIREBASE_SA_FILE: ${{ env.FIREBASE_SA_FILE }}
        run: |
          set -eu
          docker compose config  # 유효성 체크
          docker compose pull || true
          docker compose up -d --build

      - name: Post-check (optional)
        run: |
          docker ps
          docker compose logs --no-color --tail=200

